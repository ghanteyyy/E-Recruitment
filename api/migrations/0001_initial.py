# Generated by Django 5.1.2 on 2025-01-16 19:00

import api.upload_dirs
import api.utils
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], default='M')),
                ('dob', models.DateField()),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=50)),
                ('designation', models.CharField(max_length=50)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_applications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('salary', models.CharField(max_length=30)),
                ('location', models.CharField(max_length=50)),
                ('deadline', models.DateField()),
                ('status', models.CharField(choices=[('OP', 'Open'), ('CL', 'Closed')], default='OP')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('recruiter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Recruiter', to='api.recruiter')),
            ],
        ),
        migrations.CreateModel(
            name='User_Address',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('address_line1', models.CharField(max_length=50)),
                ('address_line2', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Applications',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('SH', 'ShortListed'), ('RJ', 'Rejected'), ('ACPT', 'Accepted')], default='PD')),
                ('cover_letter', models.FileField(upload_to=api.upload_dirs.application_uploads)),
                ('resume', models.FileField(upload_to=api.upload_dirs.application_uploads)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_applications', to='api.jobs')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Contact',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('INA', 'inactive'), ('A', 'active')], default='A')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_contact', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Documents',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to=api.upload_dirs.user_documents_path)),
                ('status', models.CharField(choices=[('CD', 'Current Document'), ('PD', 'Previous Document')], default='CD')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Name',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_name', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Profiles',
            fields=[
                ('id', models.UUIDField(default=api.utils.generate_random_ids, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to=api.upload_dirs.user_profile_path)),
                ('status', models.CharField(choices=[('CPP', 'Current Profile Pic'), ('PPP', 'Previous Profile Pic')], default='CPP')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
